----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 04.11.2016 17:16:05
-- Design Name: 
-- Module Name: T_FXLMS - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity T_FXLMS is
--  Port ( );
end T_FXLMS;

architecture Behavioral of T_FXLMS is

COMPONENT FXLMS
PORT(
CLK  : IN  STD_LOGIC;
SCLR : IN  STD_LOGIC := '0';
BTN  : IN  STD_LOGIC;    
--ENTRADAS MICROFONOS          
--NEWDATA : OUT  STD_LOGIC_VECTOR (15 downto 0);
--ERROR1  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR2  : OUT STD_LOGIC_VECTOR (15 downto 0);    
--ERROR3  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR4  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR5  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR6  : OUT STD_LOGIC_VECTOR (15 downto 0);                  
--ERROR7  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR8  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR9  : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR10 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR11 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR12 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR13 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR14 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR15 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR16 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR17 : OUT STD_LOGIC_VECTOR (15 downto 0);
--ERROR18 : OUT STD_LOGIC_VECTOR (15 downto 0);                                          

----Ciclos contadores          
--THRESHOLD1 : OUT STD_LOGIC;
--THRESHOLD2 : OUT STD_LOGIC;
--THRESHOLD3 : OUT STD_LOGIC;
--THRESHOLD4 : OUT STD_LOGIC;
--THRESHOLD5 : OUT STD_LOGIC;
--THRESHOLD6 : OUT STD_LOGIC;
----Contadores
--COUNTEROUT1 : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
--COUNTEROUT2 : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
--COUNTEROUT3 : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
--COUNTEROUT4 : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
--COUNTEROUT5 : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
--COUNTEROUT6 : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);

--RAM1_Q    : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
--RAM2_1_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_2_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_3_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_4_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_5_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_6_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_7_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_8_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_9_Q  : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_10_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_11_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_12_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_13_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_14_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_15_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_16_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);
--RAM2_17_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0); 
--RAM2_18_Q : OUT STD_LOGIC_VECTOR (43 DOWNTO 0);  
                                                               
--RAM31_PA_Q : OUT STD_LOGIC_VECTOR (24 DOWNTO 0);
--RAM31_PB_Q : OUT STD_LOGIC_VECTOR (24 DOWNTO 0);

--ROM1_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM2_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM3_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM4_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM5_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM6_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM7_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM8_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM9_Q  : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM10_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM11_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM12_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM13_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM14_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM15_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM16_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM17_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
--ROM18_Q : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);                                                                              

--MACC1_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC2_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC3_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC4_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC5_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC6_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC7_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC8_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC9_Q  : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC10_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC11_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC12_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC13_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC14_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC15_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC16_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC17_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);
--MACC18_Q : OUT  STD_LOGIC_VECTOR (43 DOWNTO 0);  
                                                                     
--MULT1_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT2_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT3_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT4_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT5_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT6_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT7_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT8_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT9_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT10_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT11_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT12_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT13_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT14_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT15_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT16_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT17_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);
--MULT18_Q: OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);                                                  
--ADDER_Q : OUT  STD_LOGIC_VECTOR (47 DOWNTO 0);             
--DIV_Q:    OUT  STD_LOGIC_VECTOR (16 DOWNTO 0);
--ADDSUB_Q: OUT  STD_LOGIC_VECTOR (24 DOWNTO 0);       
MACC_FILTER_Q : OUT STD_LOGIC_VECTOR (47 DOWNTO 0);
SALIDA_CONTROL : OUT STD_LOGIC_VECTOR (47 DOWNTO 0);
--ENTRADA : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
STATE_O : OUT STD_LOGIC_VECTOR (4 DOWNTO 0); 
CLK_25MHZ: OUT STD_LOGIC;  
CLK_1KHZ: OUT STD_LOGIC;  
--BYPASS1 : OUT STD_LOGIC;
--BYPASS2 : OUT STD_LOGIC 
UART_TXD : OUT STD_LOGIC 
);END COMPONENT;

SIGNAL    CLK           : STD_LOGIC := '0';
SIGNAL    SCLR          : STD_LOGIC := '1';
SIGNAL    BTN           : STD_LOGIC := '0';
--SIGNAL    NEWDATA       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR1        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR2        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR3        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR4        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR5        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR6        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR7        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR8        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR9        : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR10       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR11       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR12       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR13       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR14       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR15       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR16       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR17       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    ERROR18       : STD_LOGIC_VECTOR (15 DOWNTO 0) := (OTHERS => '0');

--SIGNAL    THRESHOLD1    : STD_LOGIC := '0';
--SIGNAL    THRESHOLD2    : STD_LOGIC := '0';
--SIGNAL    THRESHOLD3    : STD_LOGIC := '0';
--SIGNAL    THRESHOLD4    : STD_LOGIC := '0';
--SIGNAL    THRESHOLD5    : STD_LOGIC := '0';
--SIGNAL    THRESHOLD6    : STD_LOGIC := '0';

--SIGNAL    COUNTEROUT1   : STD_LOGIC_VECTOR (8 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    COUNTEROUT2   : STD_LOGIC_VECTOR (8 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    COUNTEROUT3   : STD_LOGIC_VECTOR (8 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    COUNTEROUT4   : STD_LOGIC_VECTOR (8 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    COUNTEROUT5   : STD_LOGIC_VECTOR (8 DOWNTO 0) := (OTHERS => '0');
--SIGNAL    COUNTEROUT6   : STD_LOGIC_VECTOR (8 DOWNTO 0) := (OTHERS => '0');

--SIGNAL    RAM1_Q        : STD_LOGIC_VECTOR (15 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_1_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_2_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_3_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_4_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_5_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');                                                                              
--SIGNAL    RAM2_6_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_7_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_8_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_9_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');                                                                              
--SIGNAL    RAM2_10_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_11_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_12_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_13_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_14_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_15_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_16_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_17_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM2_18_Q     : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM31_PA_Q     : STD_LOGIC_VECTOR (24 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    RAM31_PB_Q     : STD_LOGIC_VECTOR (24 DOWNTO 0):= (OTHERS => '0');

--SIGNAL    ROM1_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM2_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM3_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM4_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM5_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM6_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM7_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM8_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM9_Q        : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM10_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM11_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM12_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM13_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM14_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM15_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM16_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM17_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    ROM18_Q       : STD_LOGIC_VECTOR (16 DOWNTO 0):= (OTHERS => '0');

--SIGNAL    MACC1_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC2_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC3_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC4_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC5_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC6_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC7_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC8_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC9_Q       : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC10_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC11_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC12_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC13_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC14_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC15_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC16_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC17_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MACC18_Q      : STD_LOGIC_VECTOR (43 DOWNTO 0):= (OTHERS => '0');

--SIGNAL    MULT1_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT2_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT3_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT4_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT5_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT6_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT7_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT8_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT9_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT10_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT11_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT12_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT13_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT14_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT15_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT16_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT17_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');
--SIGNAL    MULT18_Q      : STD_LOGIC_VECTOR (47 DOWNTO 0):= (OTHERS => '0');

--SIGNAL    ADDER_Q       : STD_LOGIC_VECTOR (47 DOWNTO 0); 
--SIGNAL    DIV_Q         : STD_LOGIC_VECTOR (16 DOWNTO 0);
--SIGNAL    ADDSUB_Q      : STD_LOGIC_VECTOR (24 DOWNTO 0);       
SIGNAL    MACC_FILTER_Q : STD_LOGIC_VECTOR (47 DOWNTO 0);
SIGNAL    SALIDA_CONTROL : STD_LOGIC_VECTOR (47 DOWNTO 0);
--SIGNAL    ENTRADA : STD_LOGIC_VECTOR (15 DOWNTO 0);

SIGNAL    STATE_O       : STD_LOGIC_VECTOR (4 DOWNTO 0) := (OTHERS => '0');
SIGNAL    CLK_1KHZ      : STD_LOGIC := '0';
SIGNAL    CLK_25MHZ      : STD_LOGIC := '0';
--SIGNAL    BYPASS1    : STD_LOGIC := '0';
--SIGNAL    BYPASS2    : STD_LOGIC := '0';
SIGNAL    UART_TXD   : STD_LOGIC := '0';

constant CLK_period : time := 10 ns;    

begin

UUT: FXLMS PORT MAP (
CLK=>CLK,
SCLR=>SCLR,
BTN=>BTN,
--NEWDATA=>NEWDATA,
--ERROR1=>ERROR1,
--ERROR2=>ERROR2,
--ERROR3=>ERROR3,
--ERROR4=>ERROR4,
--ERROR5=>ERROR5,
--ERROR6=>ERROR6,
--ERROR7=>ERROR7,
--ERROR8=>ERROR8,
--ERROR9=>ERROR9,
--ERROR10=>ERROR10,
--ERROR11=>ERROR11,
--ERROR12=>ERROR12,
--ERROR13=>ERROR13,
--ERROR14=>ERROR14,
--ERROR15=>ERROR15,
--ERROR16=>ERROR16,
--ERROR17=>ERROR17,
--ERROR18=>ERROR18,
--THRESHOLD1=>THRESHOLD1,
--THRESHOLD2=>THRESHOLD2,
--THRESHOLD3=>THRESHOLD3,
--THRESHOLD4=>THRESHOLD4,
--THRESHOLD5=>THRESHOLD5,
--THRESHOLD6=>THRESHOLD6,
--COUNTEROUT1=>COUNTEROUT1,
--COUNTEROUT2=>COUNTEROUT2,
--COUNTEROUT3=>COUNTEROUT3,
--COUNTEROUT4=>COUNTEROUT4,
--COUNTEROUT5=>COUNTEROUT5,
--COUNTEROUT6=>COUNTEROUT6,
--RAM1_Q=>RAM1_Q,
--RAM2_1_Q=>RAM2_1_Q,
--RAM2_2_Q=>RAM2_2_Q,
--RAM2_3_Q=>RAM2_3_Q,
--RAM2_4_Q=>RAM2_4_Q,
--RAM2_5_Q=>RAM2_5_Q,
--RAM2_6_Q=>RAM2_6_Q,
--RAM2_7_Q=>RAM2_7_Q,
--RAM2_8_Q=>RAM2_8_Q,
--RAM2_9_Q=>RAM2_9_Q,
--RAM2_10_Q=>RAM2_10_Q,
--RAM2_11_Q=>RAM2_11_Q,
--RAM2_12_Q=>RAM2_12_Q,
--RAM2_13_Q=>RAM2_13_Q,
--RAM2_14_Q=>RAM2_14_Q,
--RAM2_15_Q=>RAM2_15_Q,
--RAM2_16_Q=>RAM2_16_Q,
--RAM2_17_Q=>RAM2_17_Q,
--RAM2_18_Q=>RAM2_18_Q,
--RAM31_PA_Q=>RAM31_PA_Q,
--RAM31_PB_Q=>RAM31_PB_Q,
--ROM1_Q=>ROM1_Q,
--ROM2_Q=>ROM2_Q,
--ROM3_Q=>ROM3_Q,
--ROM4_Q=>ROM4_Q,
--ROM5_Q=>ROM5_Q,
--ROM6_Q=>ROM6_Q,
--ROM7_Q=>ROM7_Q,
--ROM8_Q=>ROM8_Q,
--ROM9_Q=>ROM9_Q,
--ROM10_Q=>ROM10_Q,
--ROM11_Q=>ROM11_Q,
--ROM12_Q=>ROM12_Q,
--ROM13_Q=>ROM13_Q,
--ROM14_Q=>ROM14_Q,
--ROM15_Q=>ROM15_Q,
--ROM16_Q=>ROM16_Q,
--ROM17_Q=>ROM17_Q,
--ROM18_Q=>ROM18_Q,
--MACC1_Q=>MACC1_Q,
--MACC2_Q=>MACC2_Q,
--MACC3_Q=>MACC3_Q,
--MACC4_Q=>MACC4_Q,
--MACC5_Q=>MACC5_Q,
--MACC6_Q=>MACC6_Q,
--MACC7_Q=>MACC7_Q,
--MACC8_Q=>MACC8_Q,
--MACC9_Q=>MACC9_Q,
--MACC10_Q=>MACC10_Q,
--MACC11_Q=>MACC11_Q,
--MACC12_Q=>MACC12_Q,
--MACC13_Q=>MACC13_Q,
--MACC14_Q=>MACC14_Q,
--MACC15_Q=>MACC15_Q,
--MACC16_Q=>MACC16_Q,
--MACC17_Q=>MACC17_Q,
--MACC18_Q=>MACC18_Q,
--MULT1_Q=>MULT1_Q,
--MULT2_Q=>MULT2_Q,
--MULT3_Q=>MULT3_Q,
--MULT4_Q=>MULT4_Q,
--MULT5_Q=>MULT5_Q,
--MULT6_Q=>MULT6_Q,
--MULT7_Q=>MULT7_Q,
--MULT8_Q=>MULT8_Q,
--MULT9_Q=>MULT9_Q,
--MULT10_Q=>MULT10_Q,
--MULT11_Q=>MULT11_Q,
--MULT12_Q=>MULT12_Q,
--MULT13_Q=>MULT13_Q,
--MULT14_Q=>MULT14_Q,
--MULT15_Q=>MULT15_Q,
--MULT16_Q=>MULT16_Q,
--MULT17_Q=>MULT17_Q,
--MULT18_Q=>MULT18_Q,
--ADDER_Q=>ADDER_Q,
--DIV_Q=>DIV_Q,
--ADDSUB_Q=>ADDSUB_Q,
MACC_FILTER_Q=>MACC_FILTER_Q,
SALIDA_CONTROL=>SALIDA_CONTROL,
--ENTRADA=>ENTRADA,
STATE_O=>STATE_O,
CLK_1KHZ=>CLK_1KHZ,                      
CLK_25MHZ=>CLK_25MHZ,
--BYPASS1=>BYPASS1,
--BYPASS2=>BYPASS2
UART_TXD=>UART_TXD);

-- Clock process definitions
CLK_process :process
begin
    CLK <= '0';
    wait for CLK_period/2;
    CLK <= '1';
    wait for CLK_period/2;
end process;

-- Stimulus process
stim_proc: process
begin 
wait for CLK_period*50;
BTN <= '1';
wait;
end process;

end Behavioral;
